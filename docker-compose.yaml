version: "3.8"

volumes:
  postgres_data:
  rabbitmq_data:
  dbuser_data:
  dbassociado_data:
networks:
  puc-net:
    name: puc-net
    driver: bridge

services:
  dbkeycloak:
    container_name: db-keycloak
    image: postgres
    networks:
      - puc-net
    mem_limit: 1024m
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  srvkeycloak:
    container_name: srv-keycloak
    image: quay.io/keycloak/keycloak:latest
    networks:
      - puc-net
    volumes:
      - ./keycloack/imports/realm-export.json:/opt/jboss/keycloak/imports/realm-export.json 
    command:
      - "-b 0.0.0.0 -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json"
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: dbkeycloak
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_HOSTNAME: srvkeycloak
      KEYCLOAK_IMPORT: "./keycloack/imports/realm-export.json -Dkeycloak.profile.feature.upload_scripts=enabled"
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - "8080:8080"
    mem_limit: 1024m
    depends_on:
      - dbkeycloak

  dbuser:
    container_name: db-user-api
    image: postgres
    environment:
      POSTGRES_DB: "dbautenticacao"
      POSTGRES_USER: "user_autenticacao"
      POSTGRES_PASSWORD: "user_autenticacao"
      PGDATA: /var/lib/postgresql/data/pgdata
      PGPORT: 7432
    ports:
      - "7432:7432"
    volumes:
      - dbuser_data:/var/lib/postgresql/data
      - ./db-ms-usuario/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - puc-net
    mem_limit: 1024m

  userservice:
    container_name: user-api
    image: docker.io/library/ms-usuario:1.0
    networks:
      - puc-net
    ports:
      - "8081:8081"
    mem_limit: 1024m
    depends_on:
      - dbuser

  srvrabbitmq:
    container_name: srv-rabbitmq
    image: rabbitmq:3.8.3-management
    networks:
      - puc-net
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq_config.json:/etc/rabbitmq/definitions.json
    environment:
      - RABBITMQ_ERLANG_COOKIE=secret_pass
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  dbassociado:
    container_name: db-associado-api
    image: postgres
    networks:
      - puc-net
    environment:
      POSTGRES_DB: "dbassociado"
      POSTGRES_USER: "user_associado"
      POSTGRES_PASSWORD: "user_associado"
      PGDATA: /var/lib/postgresql/data/pgdata
      PGPORT: 8432
    ports:
      - "8432:8432"
    mem_limit: 1024m
    volumes:
      - dbassociado_data:/var/lib/postgresql/data
      - ./db-ms-associado/init.sh:/docker-entrypoint-initdb.d/init.sh
    depends_on:
      - srvrabbitmq

  associadoservice:
    container_name: associado-api
    image: docker.io/library/ms-associado:1.0
    networks:
      - puc-net
    ports:
      - "8082:8082"
    mem_limit: 1024m
    depends_on:
      - dbassociado
  
  associadoconsumer:
    container_name: associado-consumer
    image: docker.io/library/cs-associado:1.0
    networks:
      - puc-net
    ports:
      - "8083:8083"
    mem_limit: 1024m